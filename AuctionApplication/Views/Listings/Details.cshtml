@model AuctionApplication.Models.Listing
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
    ViewData["ListingId"] = Model.Id;

    ViewData["HighestBidString"] = Model.Bids!.Any()
            ? $"$ {Model.Bids?.Select(l => l.Price).Max().ToString("N2")}"
            : "This listing has no bids";
}

<div class="d-flex gap-5 my-5 align-items-end justify-content-center">
    <img src="~/images/@Model.ImagePath" class="w-25 square-img" alt="Image"  />    
    <div class="d-flex flex-column gap-1 w-50">
        <div>
            <h2>@Model.Title</h2>
            <span>Listed by @Model.User?.UserName</span>
            <hr />
            <dl class="row">
                <dt class = "col-sm-3">Description</dt>
                <dd class = "col-sm-8">@Model.Description</dd>
                <dt class = "col-sm-3">Starting Price</dt>
                <dd class = "col-sm-8">$ @Model.Price.ToString("N2")</dd>
                <dt class = "col-sm-3">Highest Bid</dt>
                <dd class = "col-sm-8">@ViewData["HighestBidString"]</dd>
                @if (!Model.IsSold && Model?.IdentityUserId != UserManager.GetUserId(User))
                {
                    <dt class="text-green fw-400 mt-1">This auction is still accepting bids.</dt>
                }
            </dl>
        </div>
        <div class="d-flex gap-2">
            @if (Model?.IdentityUserId == UserManager.GetUserId(User))
            {
                <a class="flex-grow-1 link-btn py-3 icon-16 d-flex justify-content-center align-items-baseline gap-2 btn-blue btn-blue-hover" asp-action="Edit" asp-route-id="@Model?.Id">
                    <i class="fa-solid fa-pen-to-square"></i> Edit
                </a>
            }
            <a class="flex-grow-1 link-btn btn-mute py-3 icon-16 d-flex justify-content-center align-items-baseline gap-2 btn-mute-hover" asp-action="Index">
                <i class="fa-solid fa-arrow-left"></i> Back to List
            </a>
            @if (Model?.IdentityUserId == UserManager.GetUserId(User))
            {
                <a class="w-fit link-btn py-3 px-4 icon-16 d-flex justify-content-center align-items-center icon-20 gap-2 btn-red btn-red-hover" asp-action="Delete" asp-route-id="@Model?.Id">
                    <i class="fa-solid fa-trash-can"></i>
                </a>
            }
        </div>
    </div>
</div>
<hr class="my-4" />
<div class="d-flex gap-5 justify-content-center">

    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content p-4 rd-4 d-flex flex-column gap-3">
                <div>
                    <h5 class="modal-title" id="exampleModalLabel">Make a Bid</h5>
                </div>
                <div class="modal-body p-0">
                    @await Component.InvokeAsync("BidForm", new { listing = Model })
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex flex-column flex-grow-1 w-100 gap-1">
        @if (UserManager.GetUserId(User) != Model?.IdentityUserId)
        {
            <button type="button" class="link-btn btn-mute btn-gold-hover d-flex gap-3 justify-content-center align-items-center border-0 py-3 my-0 mb-4" onclick="ShowModal()">
                <i class="fa-solid fa-coins icon-20"></i>Make a Bid
            </button>
        }
        <h5>Most Recent Bids</h5>
        @await Component.InvokeAsync("BidList", new { listingId = ViewData["ListingId"], count = 10 })
    </div>

    <div class="d-flex flex-column flex-grow-1 w-100 gap-3 rd-3">
        
        @await Component.InvokeAsync("CommentSection", new { listingId = ViewData["ListingId"] })
        @await Component.InvokeAsync("CommentInput", new { listing = Model })
    </div>
</div>

<script type="text/javascript">
    function ShowModal() {
        $("#exampleModal").modal('show');
    }
</script>